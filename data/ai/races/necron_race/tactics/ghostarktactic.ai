----------------------------------------
-- File: 'ghostarktactic.ai'
-- Edited by Cylarne @ 9-3-2014
-- Edited by Thudmeizer @ 08.10.2016

class 'GhostArkTactic' (NecronVehicleTactic)

GhostArk = {}

function GhostArkTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Ghost Ark Tactic")
	
	self.m_iTransportVehicle = 1
	self.m_iTransportSlots = 2

	self.previousPosition = self.squad_ai:GetPosition()
	self.checkTime = g_iGMT
end

function GhostArkTactic:InitAbilities()
	
	-- Init ability ID's
	if (GhostArk.shift_id == nil) then
		GhostArk.shift_id = cpu_manager.stats:GetAbilityID( "necron_ghost_ark_shift" )
	end
	if (GhostArk.truegauss_id == nil) then
		GhostArk.truegauss_id = cpu_manager.stats:GetAbilityID( "necron_truegauss" )
	end
end

function GhostArkTactic:DoAbilities()

	-- Check if we can phase shift: phases all nearby Necron units out of the material Universe, making all units immune to attacks, while also able to attack
	if (self.squad_ai:CanDoAbility(GhostArk.shift_id)) then
	
		-- Search a squad
		local iRange = self.squad_ai:GetAbilityRange(GhostArk.shift_id)
		local oUnit = Ability.Filters.CloseHurt(self.squad_ai:GetPosition(), iRange, 1)
		if (oUnit ~= nil and oUnit:IsInCombat() and cpu_manager:GetUnitStrength(oUnit) > 150) then
			self.squad_ai:DoSpecialAbility(GhostArk.shift_id)
		end
	end

	-- Gauss Weapon Overcharge: the squad will receive a boost in maximum damage, but a critical reduction in movement speed for a duration.
	if (self.squad_ai:IsInCombat() and self.squad_ai:GetHealthPercentage() > 0.5) then
		Ability.DoAbilityArea( self.squad_ai, GhostArk.truegauss_id, Ability.Filters.CloseEnemy, 20, 5 )
	end

	-- Jump/Teleport squads' unstuck code call. Checks every 12 secs for stuck squads, and force them to jump nearby.
	self:SolveStuckCase()

	-- Call standard method
	NecronVehicleTactic.DoAbilities(self)
end

function GhostArkTactic:SolveStuckCase()

	if g_iGMT > self.checkTime + 18 and g_iGMT > self.last_jump + 60 then
        self.checkTime = g_iGMT
        	if self:IsSquadStuck() then
            		self:ForceSquadJumpNear(self.squad_ai:GetPosition())
        	end
	end
end

function GhostArkTactic:IsSquadStuck()

	local iPosition = self.squad_ai:GetPosition()
	local iDistance = distance_sqr(iPosition, self.previousPosition)
    	self.previousPosition = iPosition
    	if iDistance > 25 or self.squad_ai:IsInCombat() or self.squad_ai:IsCapturing() then
        	return false
    	end
    	return true
end

function GhostArkTactic:ForceSquadJumpNear(pos)

	-- Try to jump somewhere near, perform 16 checks for a viable position
    	for iLoop1 = 1, 16 do
        	-- Create a jump position
		local vJumpPosition = pos
        	local vDir = cpu_manager:GetDirectionToEnemy(pos)
        	vJumpPosition.x = vJumpPosition.x + vDir.x * math.random(-20, 50)
        	vJumpPosition.z = vJumpPosition.z + vDir.z * math.random(-20, 50)
        	-- Check if target position is in range and if unit is able to jump to target position
        	local iDistance = distance_sqr(vJumpPosition, pos)
        	if iDistance < sqr(self.squad_ai:GetJumpDistance()) and self.squad_ai:CanJumpToPosition(vJumpPosition) then                
            		-- Jump to position
            		self.squad_ai:DoJump(vJumpPosition)
            		self.last_jump = g_iGMT
            		self.m_iLastGatherMove = self.last_jump - 10
            		return
		end
	end
end