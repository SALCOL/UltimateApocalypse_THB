----------------------------------------
-- File: 'orkbuildbasestrategy.ai'
-- Edited by Thudmeizer @ 08.06.2016
-- Edited by Cylarne_04 2011

class 'OrkBuildBaseStrategy' (BuildBaseStrategy)

function OrkBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("ork_squad_armored_nob")
	self:AddDetectorUnit("ork_squad_warboss")
	self:AddDetectorUnit("ork_squad_mek_boy")
	
	-- Phases of attacks. If army is decreased substantially, or build only titans: modify.
	self.m_iArmyBuild = math.random(0, 4) -- 4 phases total. If 4 armies was defeated, stop creating armies as it is pointless. Build titans and focus on build order strategy.
	self.m_iArmyHighestStrength = 0 -- Maximum possible army strength I ever had.
end

function OrkBuildBaseStrategy:ChooseBuildProgram()

	-- Check build program count
	if (table.getn(self.info.BuildPrograms) ~= 4) then
		return BuildBaseStrategy.ChooseBuildProgram(self)
	end
	-- Set probabilities of the strategies according to the map size
	local iBuildProgram1	-- Normal
	return 1
end

function OrkBuildBaseStrategy:EvaluateSquadCap()

	-- Check if any waagh banners are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID( "ork_waagh_banner" )
	if (self:PlanExists("Build Building Plan", iBuildingID)) then
		return
	end
	
	-- Check squad and support cap
	if (self:CheckSquadCap(300, 0) or self:CheckSupportCap(150, 300) or self.tierLevel >= 4) then
	
		-- Build a Waagh Banner
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "ork_waagh_banner"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
		return
	end
end

function OrkBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "ork_hq"
		
	elseif (sType == "Generator") then
		return "ork_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "ork_bigger_generator"
		
	elseif (sType == "VehicleBuilding") then
		return "ork_mek_shop"
		
	elseif (sType == "ListeningPost") then
		return "ork_gork_totem"
		
	elseif (sType == "Turret") then
		return "ork_waagh_banner"
		
	elseif (sType == "Mine") then
		return "ork_mine_field"
	end
	return nil
end

function OrkBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "ork_waagh_banner_gunzaddon") then
		return "ork_waagh_banner"

	elseif (sType == "ork_waagh_banner_gunzaddon_2") then
		return "ork_waagh_banner"
		
	elseif (sType == "ork_waagh_banner_population_addon") then
		return "ork_waagh_banner"
		
	elseif (sType == "ork_wall_gunzaddon") then
		return "ork_wall"

	elseif (sType == "ork_gork_totem_addon_1") then
		return "ork_gork_totem"
		
	elseif (sType == "ork_gork_totem_addon_2") then
		return "ork_gork_totem"
		
	elseif (sType == "ork_boomy_platform_addon") then
		return "ork_boomy_platform"
		
	elseif (sType == "ork_turret_addon") then
		return "ork_waagh_banner_turret_sp"

	elseif (sType == "ork_turret_supa_dupa_addon") then
		return "ork_waagh_banner_turret_sp"

	elseif (sType == "ork_hq_addon") then
		return "ork_hq"
	end
	return nil
end

-- Arkhan 11.2005: Returns the squad cap and support cap of the given squad
function OrkBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "ork_squad_wartrak") then
		return 0, 1
	elseif (sSquadName == "ork_squad_grot_tank") then
		return 0, 1
	elseif (sSquadName == "ork_squad_trukk") then
		return 0, 2
	elseif (sSquadName == "ork_squad_gun_wagon") then
		return 0, 2
	elseif (sSquadName == "ork_squad_killa_kan") then
		return 0, 2
	elseif (sSquadName == "ork_squad_fighta_bomba") then
		return 0, 3
	elseif (sSquadName == "ork_squad_looted_tank") then
		return 0, 4
	elseif (sSquadName == "ork_squad_deff_dread") then
		return 0, 4
	elseif (sSquadName == "ork_squad_battle_wagon") then
		return 0, 4
	elseif (sSquadName == "ork_squad_kill_bursta") then
		return 0, 5
	elseif (sSquadName == "ork_squad_kill_krusha") then
		return 0, 5
	elseif (sSquadName == "ork_squad_battlefortress") then
		return 0, 6
	elseif (sSquadName == "ork_squad_nukklear_bomba") then
		return 0, 10
	end
	return 0, 0
end

-- Arkhan 01.2006: Inherited method to check if an addon is a tier addon
function OrkBuildBaseStrategy:IsTierAddon( sName, iTargetTier )

	-- Check addon name and target tier
	if (sName == "ork_hq_addon" and iTargetTier == 2) then
		return true
	end
	return false
end

function OrkBuildBaseStrategy:UpdateTierLevel()

	-- Reset tier level
	self.tierLevel = 1

	-- Prepare
	local iHQAddonID = cpu_manager.stats:GetAddOnID("ork_hq_addon")
	local oStats = cpu_manager.stats:GetPlayerStatsFromID( cpu_manager.player_id )
	
	-- Check HQ's for addons
	for oBase in oStats:GetBases() do

		-- Check for valid building
		if (oBase:IsValid() and not oBase:IsListeningPost()) then

			-- Check for HQ addon
			if (oBase:HasAddOn(iHQAddonID)) then
				self.tierLevel = 2
			end
		end
	end

	-- Check next tiers by population
	if (build_manager:GetSquadCapCurrentMax() > 90) then
		self.tierLevel = 3
	end
	if (build_manager:GetSquadCapCurrentMax() > 120) then
		self.tierLevel = 4
	end
	if (build_manager:GetSquadCapCurrentMax() > 175) then
		self.tierLevel = 5
	end
	if (build_manager:GetSquadCapCurrentMax() > 300) then
		self.tierLevel = 6
	end
end

function OrkBuildBaseStrategy:BuildFlexible()

	-- Locales
	local iArmyStrength = cpu_manager:GetArmyStrength()
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )
	
	-- Determine my all time largest army. During major casualties, determine if I should create more squads or only focus on build orders and titans.
	if (iArmyStrength > self.m_iArmyHighestStrength) then
		self.m_iArmyHighestStrength = iArmyStrength
	end
	
	if (self.m_iArmyBuild < 8) then
		-- HUGE hit! I have a very large army, and then in battle I lost so many...
		if (iArmyStrength <= self.m_iArmyHighestStrength - 300 and iArmyStrength <= 2300) then
			self.m_iArmyBuild = self.m_iArmyBuild + 1
			self.m_iArmyHighestStrength = 0
		end
	-- Unleash all squads if we have enough req/power or my army is super large or the game minute time is > 40 minutes.
	elseif ((iRequisition > 2500 and iPower > 1000) or iArmyStrength > 3500 or (g_iGMT < 50 and g_iGMT > 40)) then
		self.m_iArmyBuild = 0
	end
	
	--[[TEKNOLOJEE BY RANDOM!]]
		
	self.m_iJeeChoice = math.random(0, 1000)
	
	-- 1000 chance / 23 total = 43 approx. for even distribution.
	
	if (self.m_iJeeChoice <= 43) then
		self:DynamicResearch("ork_research_tech_deff_dread", 3, 0, 200, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_battlewagon", 3, 0, 180, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 86) then
		self:DynamicResearch("ork_research_tech_bomb_squigs", 2, 0, 140, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_gunwagon", 2, 0, 180, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 144) then
		self:DynamicResearch("ork_research_tech_tankbustaz", 1, 0, 130, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_ard_boyz", 1, 0, 120, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 235) then
		self:DynamicResearch("ork_research_tech_burna_boyz", 1, 0, 90, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_killa_kan", 2, 0, 140, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 450) then
		self:DynamicResearch("ork_research_tech_lootas", 5, 0, 300, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_nobz_armored", 5, 0, 300, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 650) then
		self:DynamicResearch("ork_research_tech_kill_bursta", 4, 0, 340, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_kill_krusha", 4, 0, 300, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 725) then
		self:DynamicResearch("ork_research_tech_looted_tank", 4, 0, 290, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_nukklear_bomma", 5, 0, 650, 0, 0, nil, 0)
	elseif (self.m_iJeeChoice <= 810) then
		self:DynamicResearch("ork_research_tech_nobz", 3, 0, 200, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_flash_gitz", 3, 0, 200, 0, 0, nil, 0)
	else
		self:DynamicResearch("ork_research_tech_squiggoth", 4, 0, 400, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_battlefortress", 4, 0, 500, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_gargant", 5, 0, 800, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_tech_great_gargant", 5, 0, 2000, 0, 0, nil, 0)
	end
	
	if (iArmyStrength >= 2000 or (iPower >= 800 and iRequisition >= 900)) then
		
		-- Dynamic research item syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount
		local iCommanderSquads = self:CountSquads("ork_squad_mek_boy") + self:CountSquads("ork_squad_warboss")
		local iInfantrySquads = self:CountSquads("ork_squad_slugga") + self:CountSquads("ork_squad_shoota_boy") + self:CountSquads("ork_squad_stormboy") +
								self:CountSquads("ork_squad_nob") + self:CountSquads("ork_flash_gitz_squad") + self:CountSquads("ork_squad_tankbusta")
		local iUberSquads = self:CountSquads("ork_squad_kustim_stompa") + self:CountSquads("ork_squad_squiggoth_gargantaun") + self:CountSquads("ork_squad_ork_gargant") + self:CountSquads("ork_squad_great_gargant") 

		-- Compute tier 1 researches
		if (self.tierLevel >= 1) then

			-- Compute builder research
			self:DynamicResearch("ork_research_grot_infiltrate", 1, 50, 25, 0, 0, "ork_squad_grot", 1)
			
			-- Compute secondary researches
			if (iArmyStrength >= 750) then

				-- Compute infantry research
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("ork_research_tougherorks", 1, 30, 10, 0, 0, nil, 0)
					self:DynamicResearch("ork_research_eavy_armor_boyz", 1, 50, 15, 0, 0, nil, 0)
					self:DynamicResearch("ork_research_burna", 1, 50, 10, 0, 0, "ork_squad_slugga", 1)
				end
			end
			
			-- Compute bonus researches
			if (iArmyStrength >= 1250) then
				-- Compute infantry research
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("ork_research_stikk_bombs", 1, 25, 75, 0, 0, nil, 0)
					self:DynamicResearch("ork_research_speed_boost_stormboyz", 1, 55, 35, 0, 0, "ork_squad_stormboy", 1)
				end
			end
		end
		
		-- Compute tier 2 researches
		if (self.tierLevel >= 2) then

			-- Compute resource research
			self:DynamicResearch("ork_power_research_1", 2, 150, 40, 0, 0, nil, 0)
			self:DynamicResearch("ork_requisition_research_1", 2, 75, 250, 0, 0, nil, 0)
			
			-- Compute More Armor research
			self:DynamicResearch("ork_research_extra_armour", 2, 100, 50, 0, 0, nil, 0)
			
			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("ork_research_tankbustabombs", 2, 75, 75, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_moredakka", 2, 40, 15, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_rokkit_launcha", 2, 90, 35, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_bigshoota", 2, 80, 15, 0, 0, "ork_squad_shoota_boy", 1)
			end	
			
			-- Compute secondary researches
			if (iArmyStrength >= 1250) then
			
				-- Compute commander research
				if (iCommanderSquads >= 1) then
					self:DynamicResearch("ork_research_tougher_bosses", 2, 65, 40, 0, 0, nil, 0)
				end
				
				-- Compute infantry research
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("ork_research_morechoppy", 2, 60, 20, 0, 0, nil, 0)
					--self:DynamicResearch("ork_research_tank_busta_infiltrate", 2, 150, 100, 0, 0, "ork_squad_tankbusta", 1)
				end
			end
			
			-- Compute bonus researches
			if (iArmyStrength >= 1750) then
			
				-- Compute vehicle researches
				if (self:CountSquads("ork_squad_trukk") + self:CountSquads("ork_squad_wartrak") > 1) then
					self:DynamicResearch("ork_research_speed_boost", 2, 50, 50, 0, 0, nil, 0) 
				end
--[[				
				-- Compute commander researches
				if (iCommanderSquads >= 1) then
					-- Compute wargear researches
					self:DynamicResearch("ork_wargear01", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear02", 4, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear03", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear04", 4, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear05", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear06", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear07", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear08", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear09", 2, 0, 0, 0, 0, nil, 0)
					self:DynamicResearch("ork_wargear10", 2, 0, 0, 0, 0, nil, 0)
				end
]]				
				-- Compute turret upgrades research
				self:DynamicResearch("ork_turret_upgrade1", 2, 180, 180, 0, 0, nil, 0)
				self:DynamicResearch("ork_turret_upgrade2", 3, 390, 390, 0, 0, nil, 0)
				self:DynamicResearch("ork_listening_post_upgrade", 3, 600, 240, 0, 0, nil, 0)
			end
		end
		
		-- Compute tier 3 researches
		if (self.tierLevel >= 3) then
		
			-- Compute resource research
			self:DynamicResearch("ork_power_research_2", 3, 300, 80, 0, 0, nil, 0)
			self:DynamicResearch("ork_requisition_research_2", 3, 100, 350, 0, 0, nil, 0)
			
			-- Compute Even More Armor research
			self:DynamicResearch("ork_bombs_research", 4, 125, 75, 0, 0, nil, 0)
			
			-- Compute infantry research
			if (iInfantrySquads >= 3) then
				self:DynamicResearch("ork_research_tougherorks_2", 1, 40, 20, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_eavy_armor_boyz_2", 3, 80, 20, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_evenmoredakka", 3, 60, 30, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_rokkit_launcha_2", 3, 115, 45, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_bigshoota_2", 3, 100, 30, 0, 0, nil, 0)
			end
			
			-- Compute secondary researches
			if (iArmyStrength >= 1750) then
				
				-- Compute commander research
				if (iCommanderSquads >= 1) then
					self:DynamicResearch("ork_research_tougher_bosses_2", 3, 85, 50, 0, 0, nil, 0)
				end

				-- Compute infantry research
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("ork_research_evenmorechoppy", 3, 100, 40, 0, 0, nil, 0)
					self:DynamicResearch("ork_research_boomy_stikk_bombs", 3, 150, 80, 0, 0, nil, 0)
					self:DynamicResearch("ork_research_burna_2", 3, 60, 30, 0, 0, "ork_squad_slugga", 1)
				end
			end

			-- Compute Walls research
			self:DynamicResearch("ork_walls_research", 3, 180, 180, 0, 0, nil, 0)
		end

		-- Compute tier 4 researches
		if (self.tierLevel >= 4) then
			
			-- Compute resource research
			self:DynamicResearch("ork_power_research_3", 4, 200, 100, 0, 0, nil, 0)
			self:DynamicResearch("ork_requisition_research_3", 4, 125, 450, 0, 0, nil, 0)
			
			-- Compute Waagh Banner Research
			self:DynamicResearch("ork_research_powerclaw", 4, 250, 125, 0, 0, nil, 0)
			
			-- Compute Walls research
			self:DynamicResearch("ork_walls_research_2", 4, 250, 250, 0, 0, nil, 0)
			
			-- Compute resource research
			self:DynamicResearch("ork_power_research_4", 4, 600, 160, 0, 0, nil, 0)
			self:DynamicResearch("ork_requisition_research_4", 4, 150, 550, 0, 0, nil, 0)
		end

		-- Compute tier 5 researches
		if (self.tierLevel >= 5) then
			
			-- Compute resource research
			self:DynamicResearch("ork_power_research_5", 5, 800, 100, 0, 0, nil, 0)
			self:DynamicResearch("ork_requisition_research_5", 5, 300, 1000, 0, 0, nil, 0)
			self:DynamicResearch("ork_requisition_research_6", 5, 1200, 4000, 0, 0, nil, 0)
	
			-- Compute Ork Titan researches
			if (iUberSquads >= 1) then
				self:DynamicResearch("ork_research_titan_armor", 5, 300, 300, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_titan_dakka", 5, 300, 300, 0, 0, nil, 0)
				self:DynamicResearch("ork_research_titan_cost", 5, 1300, 1300, 0, 0, nil, 0)
			end
	
			-- Compute major Waagh research
			self:DynamicResearch("ork_waagh_research", 5, 3000, 3000, 0, 0, nil, 0)
		end
	end

	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then

		-- Dynamic buildings
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		
		self:DynamicBuild("ork_hq", 2, 1, 700, 150, 0, 0)
		
		if ((iPower >= 1200 and iRequisition >= 1800)) then
			
			if (self.m_iArmyBuild < 6) then
				
				if (self.m_iArmyBuild >= 5) then
					self:DynamicBuild("ork_boomy_platform", 6, 3, 900, 500, 0, 0)
					self:DynamicBuild("ork_waagh_banner_turret_sp", 5, 4, 800, 460, 0, 0)
					self:DynamicBuild("ork_waagh_banner_missile_sp", 5, 5, 1500, 1000, 0, 0)
				else
					self:DynamicBuild("ork_bilda_pit", 2, 2, 1000, 700, 0, 0)
					self:DynamicBuild("ork_mine_field", 10, 1, 400, 100, 0, 0)
					self:DynamicBuild("ork_tanktrap", 4, 2, 600, 600, 0, 0)
					self:DynamicBuild("ork_bilda_pit", 3, 4, 2000, 1000, 0, 0)
					self:DynamicBuild("ork_boy_hut", 3, 5, 2500, 0, 0, 0)
					self:DynamicBuild("ork_hq_super", 2, 5, 4500, 4500, 0, 0)
				end
				
				-- tier 0
				self:DynamicBuild("ork_boy_hut", 2, 1, 1500, 0, 0, 0)
				
				-- tier 1
				self:DynamicBuild("ork_mek_shop", 2, 2, 800, 500, 0, 0)
				
				-- tier 2
				self:DynamicBuild("ork_boomy_platform", 5, 3, 1500, 500, 0, 0)
				
				-- tier 3
				self:DynamicBuild("ork_hq", 3, 4, 1500, 1500, 0, 0)
				self:DynamicBuild("ork_waagh_banner_turret_sp", 3, 4, 2000, 2000, 0, 0)
					
				-- tier 4
				self:DynamicBuild("ork_boy_hut", 3, 5, 3000, 0, 0, 0)
				self:DynamicBuild("ork_mek_shop", 3, 5, 3500, 3500, 0, 0)
				self:DynamicBuild("ork_hq_super", 2, 5, 4500, 4500, 0, 0)
				self:DynamicBuild("ork_waagh_banner_missile_sp", 4, 5, 3000, 3000, 0, 0)
			end
			
		else
			self:DynamicBuild("ork_wall", 20, 1, 700, 0, 0, 0)
			self:DynamicBuild("ork_burna_bomm", 2, 3, 750, 750, 0, 0)
			self:DynamicBuild("ork_mine_field", 10, 3, 500, 200, 0, 0)
			self:DynamicBuild("ork_tanktrap", 8, 3, 500, 500, 0, 0)
			self:DynamicBuild("ork_waagh_banner_turret_sp", 5, 3, 800, 800, 0, 0)
			self:DynamicBuild("ork_boomy_platform", 40, 3, 1500, 1000, 0, 0)
			self:DynamicBuild("ork_waagh_banner_missile_sp", 4, 4, 2500, 3000, 0, 0)
			self:DynamicBuild("ork_boy_hut", 4, 5, 3000, 0, 0, 0)
			self:DynamicBuild("ork_mek_shop", 4, 5, 3500, 3500, 0, 0)
			self:DynamicBuild("ork_hq", 4, 5, 4000, 4000, 0, 0)
			self:DynamicBuild("ork_hq_super", 3, 5, 4500, 4500, 0, 0)
		end
	end
	
	-- Build free slugga squad if possible
	self:BuildWaaghBanners()
	
	-- Build my stuff of da Orks!
	self:BuildStuff()
end

function OrkBuildBaseStrategy:BuildWaaghBanners()

	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	if ((iRequisition > 500 and build_manager:GetSquadCapCurrentMax() < 300)) then
		-- Build a Waagh Banner
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "ork_waagh_banner"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
		return
	end
end

function OrkBuildBaseStrategy:BuildStuff()

	self:DynamicBuild("ork_generator", 6 * self:GetBuildingCountByName("ork_hq"), 3, 150, 0, 0, 0)
	
	self:DynamicBuild("ork_pile_o_guns", 1, 1, 170, 70, 0, 0)
	
	self:DynamicBuild("ork_bilda_pit", 1, 1, 400, 130, 0, 0)
	
	if (self.tierLevel >= 2) then
		self:DynamicBuild("ork_mek_shop", 1, 2, 235, 135, 0, 0)
	end
	
	if (self.tierLevel >= 3) then
		self:DynamicBuild("ork_giant_waagh_banner_sp_dxp3", 1, 2, 240, 140, 0, 0)
	end
	
	if (self.tierLevel >= 5) then
		self:DynamicBuild("ork_hq_super", 1, 5, 1000, 750, 0, 0)
	end
end

-- Cylarne_04: An option to make the AI build titans (preferred).
function OrkBuildBaseStrategy:ModifySquadDemand(iUnitID)

	-- Check for squads who aren't titan or relic units and refrain from creating them if we are at a high tier.
	if (self.m_iArmyBuild >= 8) then
		return 0
	end
	
	return BuildBaseStrategy.ModifySquadDemand(self, iUnitID)
end

-- Arkhan 01.2006: Virtual method to check if force tech should be computed
function OrkBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end
	
	-- Check ressources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then

		-- Check resources
		if (iRequisition > 600 and iPower > 100) then
			return false
		end
		return true
		
	elseif (iTierLevel == 2) then

		-- Check build channel for mek shop
		if (self:GetBuildingCountByName("ork_mek_shop", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	elseif (iTierLevel == 3) then	

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier3 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
--[[		
	elseif (iTierLevel == 4) then	

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier4 and (iRequisition < 1100 or iPower < 1100)) then
			return true
		end
]]
	end
	return false
end

-- Arkhan 03.2006: Return placement type for buildings
function OrkBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (iBuildingID == cpu_manager.stats:GetBuildingID("ork_hq")) then
		return "Safeplace"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_boy_hut") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_mek_shop") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_bilda_pit") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_giant_waagh_banner_sp_dxp3") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_hq_super")) then
		return "Military"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_waagh_banner") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_waagh_banner_turret_sp") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_waagh_banner_missile_sp") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_wall")) then
		return "Front2"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_boomy_platform")) then
		return "Front1"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_mine_field") or
	        iBuildingID == cpu_manager.stats:GetBuildingID("ork_burna_bomm") or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_tanktrap")) then
		return "Mine"
	elseif (cpu_manager:IsGenerator(iBuildingID) or
		iBuildingID == cpu_manager.stats:GetBuildingID("ork_pile_o_guns")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Arkhan 03.2006: Inherited method to modify squad demand
function OrkBuildBaseStrategy:ModifySquadDemand(iUnitID)

	-- No more docs then slugga/nob squads
	if (iUnitID == cpu_manager.stats:GetSquadID("ork_squad_bad_dok")) then

		-- Check number of ork squads
		local dok_attach = function( squad_ai )
			return (squad_ai:GetTactic():GetUnitStrength() >= 250 and squad_ai:CanReceiveAttachment())
		end
		local num_attach = self:CountSquads("ork_squad_slugga", dok_attach) + 
				   self:CountSquads("ork_squad_shoota_boy", dok_attach) +
				   self:CountSquads("ork_squad_tankbusta", dok_attach) +
				   self:CountSquads("ork_squad_nob", dok_attach) +
				   self:CountSquads("ork_flash_gitz_squad", dok_attach)

		-- Check number of docs
		local num_dok = self:CountSquads("ork_squad_bad_dok")
		if (num_dok >= num_attach) then
			return 0
		end
	end
	return BuildBaseStrategy.ModifySquadDemand(self, iUnitID)
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function OrkBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if ((sName == "ork_squad_squiggoth") or
		(sName == "ork_squad_kustim_stompa") or
		(sName == "ork_squad_squiggoth_gargantaun") or
		(sName == "ork_squad_kill_bursta") or
		(sName == "ork_squad_kill_krusha") or
		(sName == "ork_squad_ork_gargant") or
		(sName == "ork_squad_battlefortress")) then
		return true
	end
	return false
end